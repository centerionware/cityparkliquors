name: Build and Publish Multi-Arch Docker Image

on:
  push:
    branches:
      - '**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed to push changes to another repo
      packages: write
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Set short commit SHA as version
        id: version
        run: echo "VERSION=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push multi-arch Docker image
        run: |
          IMAGE_TAG=ghcr.io/${{ github.repository }}/website:${{ steps.version.outputs.VERSION }}
          LATEST_TAG=ghcr.io/${{ github.repository }}/website:latest
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file Dockerfile \
            --push \
            --tag $IMAGE_TAG \
            --tag $LATEST_TAG \
            ./

      - name: Update ArgoCD deployment manifest
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          COMMIT_MSG: ${{ github.event.head_commit.message }}
        run: |
          set -euo pipefail
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          REPO_URL="https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          BRANCH="argocd"
          DEPLOYMENT_FILE_PATH="cityparkliquors/website-nginx-deployment.yaml"
          INGRESS_FILE_PATH="cityparkliquors/website-nginx-ingress.yaml"
          PRODUCTION_PREFIX="ghcr.io/centerionware/cityparkliquors"
          IMAGE_PREFIX="ghcr.io/${{ github.repository }}/website"
          SHORT_SHA="${{ steps.version.outputs.VERSION }}"
          FULL_SHA="${{ github.sha }}"
          AUTHOR="${{ github.event.head_commit.author.name }}"
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"

          NEW_TAG="${SHORT_SHA}"

          git clone --single-branch --branch "$BRANCH" "$REPO_URL"
          cd cityparkliquors

          if [ "$IMAGE_PREFIX" != "$PRODUCTION_PREFIX" ]; then
            # Extract FORK_URL (first part of github.repository)
            REPO="${{ github.repository }}"
            FORK_URL="${REPO%%/*}"

            if ! grep -qE "^\s*- host:\s*${FORK_URL}\." "$INGRESS_FILE_PATH"; then
              sed -i "s|\(\s*- host:\s*\)\(.*\)|\1$FORK_URL.\2|" "$INGRESS_FILE_PATH"
            fi
            sed -i "s|$PRODUCTION_PREFIX|$IMAGE_PREFIX|g" "$DEPLOYMENT_FILE_PATH"
          fi

          sed -i "s|\(\s*- image: $IMAGE_PREFIX:\)[^[:space:]]*|\1$NEW_TAG|" "$DEPLOYMENT_FILE_PATH"
          echo "Updated image tag in $DEPLOYMENT_FILE_PATH:$NEW_TAG"
          # cat "$FILE_PATH"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          cat <<EOF > commit-message.txt
          Update image tag to $NEW_TAG

          Source Commit Metadata:
          - Author: $AUTHOR
          - SHA: $FULL_SHA
          - Commit: $COMMIT_URL

          Message:
          $COMMIT_MSG
          EOF
          echo "Created commit message:"
          cat commit-message.txt
          git add "$DEPLOYMENT_FILE_PATH"
          git add "$INGRESS_FILE_PATH"
          echo "added file"
          git commit -F commit-message.txt
          echo "committed"
          git push origin "$BRANCH"
          echo "pushed"

